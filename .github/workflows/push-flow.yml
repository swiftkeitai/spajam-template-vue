# This is a basic workflow to help you get started with Actions

name: Deploy to Netlify

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master , develop ]
  pull_request:
    branches:
      - master
      - develop

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Discord Message Notify
      uses: appleboy/discord-action@0.0.3
      with:
        webhook_id: ${{ secrets.WEBHOOK_ID }}
        webhook_token: ${{ secrets.WEBHOOK_TOKEN }}
        color: "#48f442"
        username: "push通知する城之内"
        args: ${{ github.ref }} に コミットされた様だぜ！　https://github.com/swiftkeitai/spajam-template-vue/commit/${{ github.sha }} 

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.
    - name: Cache node_modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-build-
          ${{ runner.OS }}

    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: npm install and build
      run: |
        npm install
          npm run build

    - name: Deploy to netlify
      id: netlify_deploy
      run: |
        npx netlify-cli deploy --dir=./dist > result.txt
        cat result.txt
        HOGE=$(cat result.txt | grep "Website Draft URL")
        echo debugging
        echo $HOGE
        echo "::set-output name=resut::$HOGE}"
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

    - name: debug
      id: debug
      run: |
        echo "debuging"
        cat result.txt
        echo "end"
        echo ${{ steps.netlify_deploy.outputs.result }}
        echo "grepped"
        cat result.txt | grep "Website Draft URL"
        echo "::set-output name=resut::$(cat result.txt | grep "Website Draft URL")"

    - name: Discord Message Notify
      uses: appleboy/discord-action@0.0.3
      with:
        webhook_id: ${{ secrets.WEBHOOK_ID }}
        webhook_token: ${{ secrets.WEBHOOK_TOKEN }}
        username: "netlify test"
        args: ${{ steps.netlify_deploy.outputs.result }}

    - name: Discord Message Notify
      uses: appleboy/discord-action@0.0.3
      with:
        webhook_id: ${{ secrets.WEBHOOK_ID }}
        webhook_token: ${{ secrets.WEBHOOK_TOKEN }}
        username: "netlify test2"
        args: ${{ steps.debug.outputs.result }}